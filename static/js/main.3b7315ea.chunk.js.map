{"version":3,"sources":["redux/store.js","components/listItem/ListItem.js","components/itemsList/ItemsList.js","components/comment/Comment.js","components/commentsList/CommentsList.js","components/dairy/Dairy.js","App.js","index.js"],"names":["getItemsList","state","itemsList","getItemText","itemText","getSelectedId","selectedId","store","createStore","action","type","newItem","itemId","filter","item","id","find","comments","push","comment","mapDispatchToProps","setSelectedId","removeItem","connect","text","className","data-id","onClick","event","target","Number","currentTarget","dataset","length","setItemsList","setItemText","addNewItem","useEffect","items","JSON","parse","localStorage","getItem","setItem","stringify","Input","placeholder","value","onChange","Button","map","key","Math","random","Comment","src","addComment","Form","TextArea","style","minHeight","onKeyUp","ctrlKey","keyCode","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b7315ea.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\n// state\nconst initialState = {\n  itemsList: [],\n};\n\n// action types\nconst SET_ITEMS_LIST = 'SET_ITEMS_LIST';\nconst SET_ITEM_TEXT = 'SET_ITEM_TEXT';\nconst ADD_NEW_ITEM = 'ADD_NEW_ITEM';\nconst SET_SELECTED_ID = 'SET_SELECTED_ID';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst ADD_COMMENT = 'ADD_COMMENT';\n\n// action creators\nexport const setItemsList = itemsList => ({ type: SET_ITEMS_LIST, itemsList });\nexport const setItemText = itemText => ({ type: SET_ITEM_TEXT, itemText });\nexport const addNewItem = newItem => ({ type: ADD_NEW_ITEM, newItem });\nexport const setSelectedId = itemId => ({ type: SET_SELECTED_ID, itemId });\nexport const removeItem = itemId => ({ type: REMOVE_ITEM, itemId });\nexport const addComment = comment => ({ type: ADD_COMMENT, comment });\n\n// selectors\nexport const getItemsList = state => state.itemsList;\nexport const getItemText = state => state.itemText || '';\nexport const getSelectedId = state => state.selectedId;\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_ITEMS_LIST:\n      return ({...state, itemsList: action.itemsList });\n\n    case SET_ITEM_TEXT:\n      return ({ ...state, itemText: action.itemText });\n\n    case ADD_NEW_ITEM:\n      return ({ ...state, itemsList: [ ...state.itemsList, action.newItem ] });\n\n    case SET_SELECTED_ID:\n      return ({ ...state, selectedId: action.itemId });\n\n    case REMOVE_ITEM:\n      return ({\n        ...state,\n        itemsList: state.itemsList.filter(item => item.id !== action.itemId),\n      });\n\n    case ADD_COMMENT: {\n      const selectedItem = state.itemsList.find(item => item.id === state.selectedId);\n      selectedItem.comments.push(action.comment);\n\n      return ({ ...state, itemsList: [ ...state.itemsList ] })\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport './ListItem.css';\nimport { connect } from 'react-redux';\nimport { getSelectedId, setSelectedId, removeItem } from '../../redux/store';\n\nconst ListItem = ({ item: { id, text, comments }, selectedId, setSelectedId, removeItem }) => {\n  const listItemClick = (event) => {\n    if (event.target.type === 'submit') return;\n\n    setSelectedId(Number(event.currentTarget.dataset.id));\n  };\n\n  const removeItemClick = (event) => {\n    const itemId = Number(event.target.dataset.id);\n\n    removeItem(itemId);\n    if (itemId === selectedId) setSelectedId(null);\n  };\n\n  return (\n    <div className={`itemList__item ${id === selectedId && 'activeItem'}`} data-id={id} onClick={listItemClick}>\n      <div className=\"itemList__item_content\">\n        <p className=\"itemList__item_text\">\n          {text}\n          <span className=\"itemList__item_commentsCount\">{comments.length}</span>\n        </p>\n        <button\n          className=\"itemList__item_button\"\n          data-id={id}\n          onClick={removeItemClick}\n        >\n          Delete\n        </button>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  selectedId: getSelectedId(state),\n});\n\nconst mapDispatchToProps = { setSelectedId, removeItem };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ListItem);\n","import React, { useEffect } from 'react';\nimport './ItemsList.css';\nimport { Button, Input } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport ListItem from '../listItem/ListItem';\nimport { getItemsList, getItemText, setItemsList, setItemText, addNewItem } from '../../redux/store';\n\nconst ItemsList = ({ itemsList, itemText, setItemsList, setItemText, addNewItem }) => {\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('itemsList'));\n\n    setItemsList(items || []);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('itemsList', JSON.stringify(itemsList));\n  }, [itemsList]);\n\n  const changeInputValue = (event) => {\n    setItemText(event.target.value);\n  };\n\n  const AddNewItemClick = (event) => {\n    if (!itemText) return;\n\n    addNewItem({ id: itemsList.length + 1, text: itemText, comments: [] });\n    setItemText('');\n  };\n\n  return (\n    <div className=\"itemList__container\">\n      <h1 className=\"itemList__title\">Items</h1>\n      <div className=\"itemList__actionsContainer \">\n        <Input\n          placeholder=\"Type name here...\"\n          className=\"itemList__input\"\n          value={itemText}\n          onChange={changeInputValue}\n        />\n        <Button className=\"itemList__button\" onClick={AddNewItemClick}>Add new</Button>\n      </div>\n      <div className=\"itemList__items\">\n        {itemsList.map(item => <ListItem key={item.text + Math.random()} item={item} />)}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  itemsList: getItemsList(state),\n  itemText: getItemText(state),\n});\n\nconst mapDispatchToProps = { setItemsList, setItemText, addNewItem };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemsList);\n","import React from 'react';\nimport './Comment.css';\n\nconst Comment = ({ comment: { text } }) => {\n  return (\n    <div className=\"comment\">\n      <div className=\"comment__content\">\n        <div>\n          <img className=\"comment__img\" src=\"https://lh3.googleusercontent.com/tsv2Gzt5rOsBDfonoy2tWJVo-4yzzo2ZxvbMgCgeHuMHbPGtnqTUWzDqcJUjy4E-FtiDBg=s85\" />\n        </div>\n        <p className=\"comment__text\">{text}</p>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport './CommentsList.css';\nimport { connect } from 'react-redux';\nimport { Form, TextArea } from 'semantic-ui-react';\nimport Comment from '../comment/Comment';\nimport { getItemsList, getSelectedId, addComment } from '../../redux/store';\n\nconst CommentsList = ({ itemsList, selectedId, addComment }) => {\n  const { comments } = itemsList.find(item => item.id === selectedId);\n\n  const handleAddComment = (event) => {\n    if (event.ctrlKey && event.keyCode === 13) {\n      addComment({ id: comments.length + 1, text: event.target.value });\n      event.target.value = '';\n    }\n  };\n\n  return (\n    <div className=\"commentsList__container\">\n      <h1 className=\"commentsList__title\">{`Comments #${comments.length}`}</h1>\n      <div className=\"commentsList__comments\">\n        {comments.map(comment => <Comment key={comment.id + Math.random()} comment={comment} />)}\n      </div>\n      <div className=\"commentsList__addComment\">\n        <div>\n          <img className=\"comment__img\" src=\"https://lh3.googleusercontent.com/tsv2Gzt5rOsBDfonoy2tWJVo-4yzzo2ZxvbMgCgeHuMHbPGtnqTUWzDqcJUjy4E-FtiDBg=s85\" />\n        </div>\n        <Form className=\"commentsList__textArea\">\n          <TextArea placeholder='Write your comment...' style={{ minHeight: 100}} onKeyUp={handleAddComment} />\n        </Form>\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  itemsList: getItemsList(state),\n  selectedId: getSelectedId(state),\n});\n\nconst mapDispatchToProps = { addComment };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommentsList);\n","import React from 'react';\nimport './Dairy.css';\nimport ItemsList from '../itemsList/ItemsList';\nimport CommentsList from '../commentsList/CommentsList';\nimport { connect } from 'react-redux';\nimport  { getSelectedId } from '../../redux/store';\n\n\nconst Dairy = ({ selectedId }) => {\n  return (\n    <div className=\"dairy__container\">\n      <div className=\"dairy__titleContainer\">\n        <h1 className=\"dairy__title\">Dairy app</h1>\n        <p className=\"dairy__title_text\">Comment with no sense</p>\n      </div>\n      <ItemsList />\n      {selectedId && <CommentsList />}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  selectedId: getSelectedId(state),\n});\n\nexport default connect(\n  mapStateToProps\n)(Dairy);\n","import React from 'react';\nimport './App.css';\nimport Dairy from './components/dairy/Dairy';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dairy />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}